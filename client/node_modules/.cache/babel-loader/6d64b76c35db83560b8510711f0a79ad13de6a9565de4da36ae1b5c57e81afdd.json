{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\staff-update-form\\\\client\\\\src\\\\RequestTypeButtons.jsx\";\nimport React from 'react';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport './RequestTypeButtons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestTypeButtons = ({\n  selected,\n  onSelect\n}) => {\n  const requestTypes = [\"Information Change\", \"Access Request\", \"Temporary Appointment or Acting Opportunities\", \"Change of Hours\", \"Position Movement\", \"Leave - Departing/Returning\", \"Transfer to Another Ministry\", \"Resignation, Retirement, or Termination\"];\n  const getTooltipText = type => {\n    if (type === \"Access Request\") {\n      return \"Access to drives, folders, mailboxes, ICE, Teleopti, I-Expense, Signing/Expense Authority, etc.\";\n    } else if (type === \"Information Change\") {\n      return \"Placeholder tooltip for Information Change\";\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"request-type-buttons\",\n    children: requestTypes.map(type => {\n      const tooltipText = getTooltipText(type);\n      const button = /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `request-type-button ${selected === type ? 'selected' : ''}`,\n        onClick: () => onSelect(type),\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n      return tooltipText ? /*#__PURE__*/_jsxDEV(Tippy, {\n        content: tooltipText,\n        delay: [0, 0],\n        children: button\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: button\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = RequestTypeButtons;\nexport default RequestTypeButtons;\nvar _c;\n$RefreshReg$(_c, \"RequestTypeButtons\");","map":{"version":3,"names":["React","Tippy","jsxDEV","_jsxDEV","RequestTypeButtons","selected","onSelect","requestTypes","getTooltipText","type","className","children","map","tooltipText","button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","content","delay","Fragment","_c","$RefreshReg$"],"sources":["C:/development/staff-update-form/client/src/RequestTypeButtons.jsx"],"sourcesContent":["import React from 'react';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport './RequestTypeButtons.css';\r\n\r\nconst RequestTypeButtons = ({ selected, onSelect }) => {\r\n  const requestTypes = [\r\n    \"Information Change\",\r\n    \"Access Request\",\r\n    \"Temporary Appointment or Acting Opportunities\",\r\n    \"Change of Hours\",\r\n    \"Position Movement\",\r\n    \"Leave - Departing/Returning\",\r\n    \"Transfer to Another Ministry\",\r\n    \"Resignation, Retirement, or Termination\"\r\n  ];\r\n\r\n  const getTooltipText = (type) => {\r\n    if (type === \"Access Request\") {\r\n      return \"Access to drives, folders, mailboxes, ICE, Teleopti, I-Expense, Signing/Expense Authority, etc.\";\r\n    } else if (type === \"Information Change\") {\r\n      return \"Placeholder tooltip for Information Change\";\r\n    } \r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"request-type-buttons\">\r\n      {requestTypes.map((type) => {\r\n        const tooltipText = getTooltipText(type);\r\n        const button = (\r\n          <button\r\n            type=\"button\"\r\n            className={`request-type-button ${selected === type ? 'selected' : ''}`}\r\n            onClick={() => onSelect(type)}\r\n          >\r\n            {type}\r\n          </button>\r\n        );\r\n\r\n        return tooltipText \r\n          ? (\r\n            <Tippy key={type} content={tooltipText} delay={[0, 0]}>\r\n              {button}\r\n            </Tippy>\r\n          )\r\n          : (\r\n            <React.Fragment key={type}>\r\n              {button}\r\n            </React.Fragment>\r\n          );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestTypeButtons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAO,yBAAyB;AAChC,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACrD,MAAMC,YAAY,GAAG,CACnB,oBAAoB,EACpB,gBAAgB,EAChB,+CAA+C,EAC/C,iBAAiB,EACjB,mBAAmB,EACnB,6BAA6B,EAC7B,8BAA8B,EAC9B,yCAAyC,CAC1C;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/B,IAAIA,IAAI,KAAK,gBAAgB,EAAE;MAC7B,OAAO,iGAAiG;IAC1G,CAAC,MAAM,IAAIA,IAAI,KAAK,oBAAoB,EAAE;MACxC,OAAO,4CAA4C;IACrD;IACA,OAAO,EAAE;EACX,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,sBAAsB;IAAAC,QAAA,EAClCJ,YAAY,CAACK,GAAG,CAAEH,IAAI,IAAK;MAC1B,MAAMI,WAAW,GAAGL,cAAc,CAACC,IAAI,CAAC;MACxC,MAAMK,MAAM,gBACVX,OAAA;QACEM,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAE,uBAAuBL,QAAQ,KAAKI,IAAI,GAAG,UAAU,GAAG,EAAE,EAAG;QACxEM,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAACG,IAAI,CAAE;QAAAE,QAAA,EAE7BF;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACT;MAED,OAAON,WAAW,gBAEdV,OAAA,CAACF,KAAK;QAAYmB,OAAO,EAAEP,WAAY;QAACQ,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;QAAAV,QAAA,EACnDG;MAAM,GADGL,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CAAC,gBAGRhB,OAAA,CAACH,KAAK,CAACsB,QAAQ;QAAAX,QAAA,EACZG;MAAM,GADYL,IAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACjB;IACL,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACI,EAAA,GAjDInB,kBAAkB;AAmDxB,eAAeA,kBAAkB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}