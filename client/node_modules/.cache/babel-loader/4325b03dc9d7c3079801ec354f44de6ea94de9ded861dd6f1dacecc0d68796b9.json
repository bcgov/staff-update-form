{"ast":null,"code":"import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nexport async function generatePDF() {\n  const formElement = document.getElementById('form-to-pdf');\n  if (!formElement) {\n    console.error('generatePDF error: form element not found');\n    return;\n  }\n\n  // Expand all textareas so none of the content is clipped\n  formElement.querySelectorAll('textarea').forEach(ta => {\n    ta.style.height = 'auto';\n    ta.style.height = `${ta.scrollHeight}px`;\n  });\n\n  // Snapshot with print‑form class applied\n  const canvas = await html2canvas(formElement, {\n    scale: window.devicePixelRatio ? window.devicePixelRatio * 1.5 : 2,\n    useCORS: true,\n    letterRendering: true,\n    onclone: clonedDoc => {\n      const clonedForm = clonedDoc.getElementById('form-to-pdf');\n      if (clonedForm) clonedForm.classList.add('print-form');\n    }\n  });\n  const imgData = canvas.toDataURL('image/png');\n  const pdf = new jsPDF('p', 'mm', 'a4');\n  const pdfWidth = pdf.internal.pageSize.getWidth();\n  const pdfHeight = canvas.height * pdfWidth / canvas.width;\n  pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n  pdf.save('form.pdf');\n}","map":{"version":3,"names":["jsPDF","html2canvas","generatePDF","formElement","document","getElementById","console","error","querySelectorAll","forEach","ta","style","height","scrollHeight","canvas","scale","window","devicePixelRatio","useCORS","letterRendering","onclone","clonedDoc","clonedForm","classList","add","imgData","toDataURL","pdf","pdfWidth","internal","pageSize","getWidth","pdfHeight","width","addImage","save"],"sources":["C:/development/staff-update-form/client/src/pdfGenerator.js"],"sourcesContent":["import jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport async function generatePDF() {\r\n  const formElement = document.getElementById('form-to-pdf');\r\n  if (!formElement) {\r\n    console.error('generatePDF error: form element not found');\r\n    return;\r\n  }\r\n\r\n  // Expand all textareas so none of the content is clipped\r\n  formElement.querySelectorAll('textarea').forEach((ta) => {\r\n    ta.style.height = 'auto';\r\n    ta.style.height = `${ta.scrollHeight}px`;\r\n  });\r\n\r\n  // Snapshot with print‑form class applied\r\n  const canvas = await html2canvas(formElement, {\r\n    scale: window.devicePixelRatio ? window.devicePixelRatio * 1.5 : 2,\r\n    useCORS: true,\r\n    letterRendering: true,\r\n    onclone: (clonedDoc) => {\r\n      const clonedForm = clonedDoc.getElementById('form-to-pdf');\r\n      if (clonedForm) clonedForm.classList.add('print-form');\r\n    }\r\n  });\r\n\r\n  const imgData = canvas.toDataURL('image/png');\r\n  const pdf = new jsPDF('p', 'mm', 'a4');\r\n  const pdfWidth = pdf.internal.pageSize.getWidth();\r\n  const pdfHeight = (canvas.height * pdfWidth) / canvas.width;\r\n  pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\r\n  pdf.save('form.pdf');\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,aAAa;AAErC,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;EAC1D,IAAI,CAACF,WAAW,EAAE;IAChBG,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;IAC1D;EACF;;EAEA;EACAJ,WAAW,CAACK,gBAAgB,CAAC,UAAU,CAAC,CAACC,OAAO,CAAEC,EAAE,IAAK;IACvDA,EAAE,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;IACxBF,EAAE,CAACC,KAAK,CAACC,MAAM,GAAG,GAAGF,EAAE,CAACG,YAAY,IAAI;EAC1C,CAAC,CAAC;;EAEF;EACA,MAAMC,MAAM,GAAG,MAAMb,WAAW,CAACE,WAAW,EAAE;IAC5CY,KAAK,EAAEC,MAAM,CAACC,gBAAgB,GAAGD,MAAM,CAACC,gBAAgB,GAAG,GAAG,GAAG,CAAC;IAClEC,OAAO,EAAE,IAAI;IACbC,eAAe,EAAE,IAAI;IACrBC,OAAO,EAAGC,SAAS,IAAK;MACtB,MAAMC,UAAU,GAAGD,SAAS,CAAChB,cAAc,CAAC,aAAa,CAAC;MAC1D,IAAIiB,UAAU,EAAEA,UAAU,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IACxD;EACF,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAGX,MAAM,CAACY,SAAS,CAAC,WAAW,CAAC;EAC7C,MAAMC,GAAG,GAAG,IAAI3B,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;EACtC,MAAM4B,QAAQ,GAAGD,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EACjD,MAAMC,SAAS,GAAIlB,MAAM,CAACF,MAAM,GAAGgB,QAAQ,GAAId,MAAM,CAACmB,KAAK;EAC3DN,GAAG,CAACO,QAAQ,CAACT,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEG,QAAQ,EAAEI,SAAS,CAAC;EACvDL,GAAG,CAACQ,IAAI,CAAC,UAAU,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}