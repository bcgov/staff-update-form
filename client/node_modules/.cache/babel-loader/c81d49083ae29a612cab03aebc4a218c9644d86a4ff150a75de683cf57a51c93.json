{"ast":null,"code":"import html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nexport async function generatePDF() {\n  const formElement = document.getElementById('form-to-pdf');\n  if (!formElement) throw new Error('form-to-pdf not found');\n\n  // take snapshot\n  const canvas = await html2canvas(formElement, {\n    scale: window.devicePixelRatio || 2,\n    useCORS: true,\n    letterRendering: true,\n    onclone: doc => {\n      const cloned = doc.getElementById('form-to-pdf');\n      if (cloned) cloned.classList.add('print-form');\n    }\n  });\n\n  // clean‑up clone‑only class\n  formElement.classList.remove('print-form');\n  const imgData = canvas.toDataURL('image/png');\n  const pdf = new jsPDF('p', 'mm', 'a4');\n  const pdfWidth = pdf.internal.pageSize.getWidth();\n  const pdfHeight = pdf.internal.pageSize.getHeight();\n\n  // compute the rendered image height in PDF units\n  const imgProps = pdf.getImageProperties(imgData);\n  const renderedH = imgProps.height * pdfWidth / imgProps.width;\n\n  // how much of the image is left to render\n  let heightLeft = renderedH;\n  // vertical offset in PDF‑units\n  let position = 0;\n\n  // first (or only) page\n  pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, renderedH);\n  heightLeft -= pdfHeight;\n\n  // add pages until we're done\n  while (heightLeft > 0) {\n    position -= pdfHeight;\n    pdf.addPage();\n    pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, renderedH);\n    heightLeft -= pdfHeight;\n  }\n  pdf.save('form.pdf');\n}","map":{"version":3,"names":["html2canvas","jsPDF","generatePDF","formElement","document","getElementById","Error","canvas","scale","window","devicePixelRatio","useCORS","letterRendering","onclone","doc","cloned","classList","add","remove","imgData","toDataURL","pdf","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","imgProps","getImageProperties","renderedH","height","width","heightLeft","position","addImage","addPage","save"],"sources":["C:/development/staff-update-form/client/src/pdfGenerator.js"],"sourcesContent":["import html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nexport async function generatePDF() {\r\n  const formElement = document.getElementById('form-to-pdf')\r\n  if (!formElement) throw new Error('form-to-pdf not found')\r\n\r\n  // take snapshot\r\n  const canvas = await html2canvas(formElement, {\r\n    scale: window.devicePixelRatio || 2,\r\n    useCORS: true,\r\n    letterRendering: true,\r\n    onclone: doc => {\r\n      const cloned = doc.getElementById('form-to-pdf')\r\n      if (cloned) cloned.classList.add('print-form')\r\n    }\r\n  })\r\n\r\n  // clean‑up clone‑only class\r\n  formElement.classList.remove('print-form')\r\n\r\n  const imgData = canvas.toDataURL('image/png')\r\n  const pdf = new jsPDF('p', 'mm', 'a4')\r\n\r\n  const pdfWidth  = pdf.internal.pageSize.getWidth()\r\n  const pdfHeight = pdf.internal.pageSize.getHeight()\r\n\r\n  // compute the rendered image height in PDF units\r\n  const imgProps    = pdf.getImageProperties(imgData)\r\n  const renderedH   = (imgProps.height * pdfWidth) / imgProps.width\r\n\r\n  // how much of the image is left to render\r\n  let heightLeft = renderedH\r\n  // vertical offset in PDF‑units\r\n  let position   = 0\r\n\r\n  // first (or only) page\r\n  pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, renderedH)\r\n  heightLeft -= pdfHeight\r\n\r\n  // add pages until we're done\r\n  while (heightLeft > 0) {\r\n    position   -= pdfHeight\r\n    pdf.addPage()\r\n    pdf.addImage(imgData, 'PNG', 0, position, pdfWidth, renderedH)\r\n    heightLeft -= pdfHeight\r\n  }\r\n\r\n  pdf.save('form.pdf')\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,aAAa;AACrC,SAASC,KAAK,QAAQ,OAAO;AAE7B,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;EAC1D,IAAI,CAACF,WAAW,EAAE,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;;EAE1D;EACA,MAAMC,MAAM,GAAG,MAAMP,WAAW,CAACG,WAAW,EAAE;IAC5CK,KAAK,EAAEC,MAAM,CAACC,gBAAgB,IAAI,CAAC;IACnCC,OAAO,EAAE,IAAI;IACbC,eAAe,EAAE,IAAI;IACrBC,OAAO,EAAEC,GAAG,IAAI;MACd,MAAMC,MAAM,GAAGD,GAAG,CAACT,cAAc,CAAC,aAAa,CAAC;MAChD,IAAIU,MAAM,EAAEA,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IAChD;EACF,CAAC,CAAC;;EAEF;EACAd,WAAW,CAACa,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;EAE1C,MAAMC,OAAO,GAAGZ,MAAM,CAACa,SAAS,CAAC,WAAW,CAAC;EAC7C,MAAMC,GAAG,GAAG,IAAIpB,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;EAEtC,MAAMqB,QAAQ,GAAID,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EAClD,MAAMC,SAAS,GAAGL,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACG,SAAS,CAAC,CAAC;;EAEnD;EACA,MAAMC,QAAQ,GAAMP,GAAG,CAACQ,kBAAkB,CAACV,OAAO,CAAC;EACnD,MAAMW,SAAS,GAAMF,QAAQ,CAACG,MAAM,GAAGT,QAAQ,GAAIM,QAAQ,CAACI,KAAK;;EAEjE;EACA,IAAIC,UAAU,GAAGH,SAAS;EAC1B;EACA,IAAII,QAAQ,GAAK,CAAC;;EAElB;EACAb,GAAG,CAACc,QAAQ,CAAChB,OAAO,EAAE,KAAK,EAAE,CAAC,EAAEe,QAAQ,EAAEZ,QAAQ,EAAEQ,SAAS,CAAC;EAC9DG,UAAU,IAAIP,SAAS;;EAEvB;EACA,OAAOO,UAAU,GAAG,CAAC,EAAE;IACrBC,QAAQ,IAAMR,SAAS;IACvBL,GAAG,CAACe,OAAO,CAAC,CAAC;IACbf,GAAG,CAACc,QAAQ,CAAChB,OAAO,EAAE,KAAK,EAAE,CAAC,EAAEe,QAAQ,EAAEZ,QAAQ,EAAEQ,SAAS,CAAC;IAC9DG,UAAU,IAAIP,SAAS;EACzB;EAEAL,GAAG,CAACgB,IAAI,CAAC,UAAU,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}